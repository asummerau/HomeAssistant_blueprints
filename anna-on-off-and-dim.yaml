blueprint:
  name: ZHA - IKEA four button remote for lights
  description:
    'Control lights with an IKEA four button remote (the square ones),
    for use with [ZHA](https://www.home-assistant.io/integrations/zha/).


    Extends [SwerveShot](https://community.home-assistant.io/u/SwerveShot)''s [version](https://community.home-assistant.io/t/zha-ikea-four-button-remote-for-lights/347657)
    which is based on the work of [frenck](https://community.home-assistant.io/u/frenck)
    with the five button version.


    Pressing the up button will turn on the lights at the last set brightness (unless
    the force brightness is toggled on in the blueprint).


    Pressing the down button will turn the lights off again.


    Pressing and holding the up/down buttons will change the brightness smoothly and
    can be pressed and hold until the brightness is satisfactory.


    The "left" and "right" buttons can be assigned to a short and long button press
    action. This allows you to assign, e.g., a scene or anything else. Use the left
    and right button events with care, as before the long press event is sent, the
    "on" event gets triggered.

    '
  domain: automation
  input:
    remote:
      name: Remote
      description: IKEA remote to use
      selector:
        device:
          integration: zha # ZHA = Zigbee Home Automation
          manufacturer: IKEA of Sweden
          model: Remote Control N2
          multiple: false

    light:
      name: Light(s)
      description: The light(s) to control
      selector:
        target:
          entity:
            domain: light

    force_brightness:
      name: Force turn on brightness
      description:
        Force the brightness to the set level below, when the "on" button
        on the remote is pushed and lights turn on.
      default: false
      selector:
        boolean: {}

    brightness:
      name: Brightness
      description: Brightness of the light(s) when turning on
      default: 100
      selector:
        number:
          min: 0.0
          max: 100.0
          mode: slider
          step: 1.0
          unit_of_measurement: "%"

    speed:
      name: Speed
      description: The speed in which to update the light when the button is held.
      selector:
        number:
          min: 0.1
          max: 2.0
          step: 0.1
          unit_of_measurement: seconds
          mode: slider
      default: 0.5

    button_left_short:
      name: Left button - short press
      description: Action to run on short left button press
      default: []
      selector:
        action: {}

    button_left_long:
      name: Left button - long press
      description:
        Action to run on long left button press. Use with care, as before
        the long press event is sent, the "on" event gets triggered.
      default: []
      selector:
        action: {}

    button_right_short:
      name: Right button - short press
      description: Action to run on short right button press
      default: []
      selector:
        action: {}

    button_right_long:
      name: Right button - long press
      description:
        Action to run on long right button press. Use with care, as before
        the long press event is sent, the "on" event gets triggered.
      default: []
      selector:
        action: {}

  source_url: https://community.home-assistant.io/t/zha-ikea-four-button-remote-styrbar-for-lights-e2001-e2002/384482

mode: restart
max_exceeded: silent
variables:
  var_speed: !input speed
  force_brightness: !input force_brightness
trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: !input remote

action:
  - variables:
      command: "{{ trigger.event.data.command }}"
      cluster_id: "{{ trigger.event.data.cluster_id }}"
      endpoint_id: "{{ trigger.event.data.endpoint_id }}"
      args: "{{ trigger.event.data.args }}"

  - choose:
      #### ON/OFF buttons ####
      # Turn light on
      - conditions:
          - "{{ command == 'on' }}"
          - "{{ cluster_id == 6 }}" # zigbee cluster id for ON/OFF
          - "{{ endpoint_id == 1 }}"
        sequence:
          - choose:
              - conditions: "{{ force_brightness }}"
                sequence:
                  - service: light.turn_on
                    target: !input light
                    data:
                      brightness_pct: !input brightness
            default: # runs if force brightness is not set
              - service: light.turn_on
                target: !input light

      # Turn light off
      - conditions:
          - "{{ command == 'off' }}"
          - "{{ cluster_id == 6 }}" # zigbee cluster id for ON/OFF
          - "{{ endpoint_id == 1 }}"
        sequence:
          - service: light.turn_off
            target: !input light

      #### Level Control: Define all brighness buttons ####
      # MOVE TO LEVEL
      - conditions:
          - "{{ command == 'move_with_on_off' }}" # move with on off from level control
          - "{{ cluster_id == 8 }}" # zigbee cluster id for Level Control
          - "{{ endpoint_id == 1 }}"
        sequence:
          - repeat:
              count: 10
              sequence:
                - service: light.turn_on
                  target: !input light
                  data:
                    brightness_step_pct: 10
                    transition: 1
                - delay: !input speed

      - conditions:
          - "{{ command == 'move' }}" # move from level Control
          - "{{ cluster_id == 8 }}" # zigbee cluster id for Level Control
          - "{{ endpoint_id == 1 }}"
        sequence:
          - repeat:
              count: 10
              sequence:
                - service: light.turn_on
                  target: !input light
                  data:
                    brightness_step_pct: -10
                    transition: 1
                - delay: !input speed

      #### Scene: Define all scene buttons ####
      # right button press
      - conditions:
          - "{{ command == 'press' }}"
          - "{{ cluster_id == 5 }}" # Scene cluster
          - "{{ endpoint_id == 1 }}"
          - "{{ args == [256, 13, 0] }}"
        sequence: !input button_right_short

        # very long press on right button
      - conditions:
          - "{{ command == 'hold' }}"
          - "{{ cluster_id == 5 }}"
          - "{{ endpoint_id == 1 }}"
          - "{{ args == [3328, 0] }}"
        sequence: !input button_right_long

      # left button press
      - conditions:
          - "{{ command == 'press' }}"
          - "{{ cluster_id == 5 }}"
          - "{{ endpoint_id == 1 }}"
          - "{{ args == [257, 13, 0] }}"
        sequence: !input button_left_short

      # very long press on left button
      - conditions:
          - "{{ command == 'hold' }}"
          - "{{ cluster_id == 5 }}"
          - "{{ endpoint_id == 1 }}"
          - "{{ args == [3329, 0] }}"
        sequence: !input button_left_long
