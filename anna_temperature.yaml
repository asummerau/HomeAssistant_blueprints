blueprint:
  source_url: https://github.com/niro1987/homeassistant-config/blob/master/blueprints/automation/niro1987/zha_ikea_tradfri_2button_remote_temperature.yaml
  name: ZHA - IKEA TRADFRI - 4 Button Remote - OnOff and Temperature
  description:
    This automation simulates the use of the IKEA TRADFRI on/off switch
    connected through ZHA.
  domain: automation
  input:
    remote:
      name: IKEA TRADFRI remote control 4 buttons (Temperature)
      description: Select the remote control you wish to use.
      selector:
        device:
          integration: zha # ZHA = Zigbee Home Automation
          manufacturer: IKEA of Sweden
          model: Remote Control N2
          multiple: false

    light:
      name: Light
      description: Select the light entity you wish to control.
      selector:
        entity:
          domain: light
          multiple: false

    force_brightness:
      name: Force turn on brightness
      description:
        Force the brightness to the set level below, when the "on" button
        on the remote is pushed and lights turn on.
      default: false
      selector:
        boolean: {}

    brightness:
      name: Brightness
      description: Brightness of the light(s) when turning on
      default: 100
      selector:
        number:
          min: 0.0
          max: 100.0
          mode: slider
          step: 1.0
          unit_of_measurement: "%"

    speed:
      name: Speed
      description: The speed in which to update the light when the button is held.
      selector:
        number:
          min: 0.1
          max: 2.0
          step: 0.1
          unit_of_measurement: seconds
          mode: slider
      default: 0.5

    # define what temperature steps it should take (250 .. 454.13 Mired)
    # Kelvin range: 2202..4000 K (1798 K)
    temp_step:
      name: Temperature Step
      description: The temperature step change
      selector:
        number:
          min: 1
          max: 205
          step: 1.0
          unit_of_measurement: mired
          mode: slider
      default: 18

    button_left_short:
      name: Left button - short press
      description: Action to run on short left button press
      default: []
      selector:
        action: {}

    button_right_short:
      name: Right button - short press
      description: Action to run on short right button press
      default: []
      selector:
        action: {}

mode: restart
max_exceeded: silent
variables:
  var_light: !input light
  var_speed: !input speed
  force_brightness: !input force_brightness
  var_temp_step: !input temp_step

trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: !input remote

action:
  - variables:
      command: "{{ trigger.event.data.command }}"
      cluster_id: "{{ trigger.event.data.cluster_id }}"
      endpoint_id: "{{ trigger.event.data.endpoint_id }}"
      args: "{{ trigger.event.data.args }}"

  - choose:
      #### ON/OFF buttons ####
      # Turn light on
      - conditions:
          - "{{ command == 'on' }}"
          - "{{ cluster_id == 6 }}" # zigbee cluster id for ON/OFF
          - "{{ endpoint_id == 1 }}"
        sequence:
          - choose:
              - conditions: "{{ force_brightness }}"
                sequence:
                  - service: light.turn_on
                    target:
                      entity_id: !input light
                    data:
                      brightness_pct: !input brightness
                      hs_color:
                        - 38.222
                        - 52.941
            default: # runs if force brightness is not set
              - service: light.turn_on
                target:
                  entity_id: !input light

      # Turn light off
      - conditions:
          - "{{ command == 'off' }}"
          - "{{ cluster_id == 6 }}" # zigbee cluster id for ON/OFF
          - "{{ endpoint_id == 1 }}"
        sequence:
          - service: light.turn_off
            target:
              entity_id: !input light

      #### Level Control: Define all brighness buttons ####
      # MOVE TO LEVEL
      - conditions:
          - "{{ command == 'move_with_on_off' }}" # move with on off from level control
          - "{{ cluster_id == 8 }}" # zigbee cluster id for Level Control
          - "{{ endpoint_id == 1 }}"
        sequence:
          - repeat:
              while: []
              sequence:
                - service: light.turn_on
                  target:
                    entity_id: !input light
                  data:
                    brightness_step_pct: 10
                    transition: "{{ (var_speed )|float }}" #"{{ (var_speed / 1000)|float }}"
                - delay: !input speed

      - conditions:
          - "{{ command == 'move' }}" # move from level Control
          - "{{ cluster_id == 8 }}" # zigbee cluster id for Level Control
          - "{{ endpoint_id == 1 }}"
        sequence:
          - repeat:
              while: []
              sequence:
                - service: light.turn_on
                  target:
                    entity_id: !input light
                  data:
                    brightness_step_pct: -10
                    transition: "{{ (var_speed )|float }}" #"{{ (var_speed / 1000)|float }}"
                - delay: !input speed

      #### Scene: Define all scene buttons ####
      # right button press
      - conditions:
          - "{{ command == 'press' }}"
          - "{{ cluster_id == 5 }}" # Scene cluster
          - "{{ endpoint_id == 1 }}"
          - "{{ args == [256, 13, 0] }}"
        sequence: !input button_right_short

      # right button press
      # - conditions:
      #     - "{{ command == 'press' }}"
      #     - "{{ cluster_id == 5 }}" # Scene cluster
      #     - "{{ endpoint_id == 1 }}"
      #     - "{{ args == [256, 13, 0] }}"
      #   sequence:
      #     - service: light.turn_on
      #       target:
      #         entity_id: !input light
      #       data:
      #         color_temp:
      #           "{% if state_attr(var_light, \"color_temp\") + var_temp_step > 500 %}\n
      #           \ {{ 500 }}\n{% else %}\n  {{ state_attr(var_light, \"color_temp\")
      #           + var_temp_step }}\n{% endif %}"
      #         transition: "{{ (var_speed / 1000)|float }}"

      # very long press on right button
      - conditions:
          - "{{ command == 'hold' }}"
          - "{{ cluster_id == 5 }}"
          - "{{ endpoint_id == 1 }}"
          - "{{ args == [3328, 0] }}"
        sequence:
          - repeat:
              while: []
              sequence:
                - service: light.turn_on
                  target:
                    entity_id: !input light
                  data:
                    color_temp:
                      "{% if state_attr(var_light, \"color_temp\") + var_temp_step > 500 %}\n
                      \ {{ 500 }}\n{% else %}\n  {{ state_attr(var_light, \"color_temp\")
                      + var_temp_step }}\n{% endif %}"
                    transition: "{{ (var_speed / 1000)|float }}"
                - delay: !input speed

      # left button press
      - conditions:
          - "{{ command == 'press' }}"
          - "{{ cluster_id == 5 }}"
          - "{{ endpoint_id == 1 }}"
          - "{{ args == [257, 13, 0] }}"
        sequence: !input button_left_short

      # left button press
      # - conditions:
      #     - "{{ command == 'press' }}"
      #     - "{{ cluster_id == 5 }}"
      #     - "{{ endpoint_id == 1 }}"
      #     - "{{ args == [257, 13, 0] }}"
      #   sequence:
      #     - service: light.turn_on
      #       target:
      #         entity_id: !input light
      #       data:
      #         color_temp:
      #           "{% if state_attr(var_light, \"color_temp\") - var_temp_step < 153 %}\n
      #           \ {{ 153 }}\n{% else %}\n  {{ state_attr(var_light, \"color_temp\")
      #           - var_temp_step }}\n{% endif %}"
      #         transition: "{{ (var_speed / 1000)|float }}"

      # very long press on left button
      - conditions:
          - "{{ command == 'hold' }}"
          - "{{ cluster_id == 5 }}"
          - "{{ endpoint_id == 1 }}"
          - "{{ args == [3329, 0] }}"
        sequence:
          - repeat:
              while: []
              sequence:
                - service: light.turn_on
                  target:
                    entity_id: !input light
                  data:
                    color_temp:
                      "{% if state_attr(var_light, \"color_temp\") - var_temp_step < 153 %}\n
                      \ {{ 153 }}\n{% else %}\n  {{ state_attr(var_light, \"color_temp\")
                      - var_temp_step }}\n{% endif %}"
                    transition: "{{ (var_speed / 1000)|float }}"
                - delay: !input speed
    default: []
